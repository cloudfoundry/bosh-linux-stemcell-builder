VAGRANTFILE_API_VERSION = '2'.freeze

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  required_plugins = %w[vagrant-vbguest vagrant-disksize]
  should_retry = false
  required_plugins.each do |plugin|
    unless Vagrant.has_plugin? plugin
      system "vagrant plugin install #{plugin}"
      should_retry = true
    end
  end

  exec 'vagrant ' + ARGV.join(' ') if should_retry

  config.disksize.size = '50GB'

  config.vm.box = 'ubuntu/bionic64'

  config.vm.provider(:virtualbox) do |v|
    v.name = 'bosh-os-image-stemcell-docker-builder'
    v.customize ['modifyvm', :id, '--cpus', '8']
    v.customize ['modifyvm', :id, '--memory', '8192']
  end

  config.vm.synced_folder('../../../', '/opt/bosh')

  if Vagrant.has_plugin?('vagrant-proxyconf')
    if ENV['http_proxy']
      config.proxy.http        = ENV['http_proxy']
      config.apt_proxy.http    = ENV['http_proxy']
    end
    if ENV['https_proxy']
      config.proxy.https        = ENV['https_proxy']
      config.apt_proxy.https    = ENV['https_proxy']
    end
    config.proxy.no_proxy = ENV['no_proxy'] if ENV['no_proxy']
  end

  config.vm.provision('docker')

  config.vm.provision :shell do |shell|
    shell.inline = <<-BASH
      # disable annoying ctrl-p docker binding
      mkdir -p ~vagrant/.docker
      echo '{ "detachKeys": "ctrl-q,q" }' > ~vagrant/.docker/config.json
      sudo chown -R vagrant ~vagrant/.docker

      # the centos build process runs into an error if we use the default aufs; devicemapper seems to work
      # see https://github.com/docker/docker/issues/6980
      echo 'DOCKER_OPTS="${DOCKER_OPTS:-} -s devicemapper "' >> /etc/default/docker
      service docker restart
    BASH
  end
end
